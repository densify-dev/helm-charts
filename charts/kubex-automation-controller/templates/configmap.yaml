apiVersion: v1
kind: ConfigMap
metadata:
  name: kubex-config
  namespace: {{ .Release.Namespace }}
data:
  CLUSTER_NAME: {{ .Values.cluster.name | required ".Values.cluster.name is required." | quote }}
  KUBEX_BASE_URL: >-
    {{- $scheme := .Values.densify.url.scheme | default "https" }}
    {{- $host := .Values.densify.url.host | required ".Values.densify.url.host is required." }}
    {{- if and (hasKey .Values.densify.url "port") .Values.densify.url.port }}
    {{ printf "%s://%s:%d" $scheme $host (.Values.densify.url.port | int) }}
    {{- else }}
    {{ printf "%s://%s" $scheme $host }}
    {{- end }}


--- 
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubex-automation-controller-clusterrole
  namespace: {{ .Release.Namespace }}
data:
  kubex-automation-controller-clusterrole-rules: |-
{{ include "kubex-automation-controller.kubex-automation-controller-clusterrole-rules" . | nindent 4 }}

--- 
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubex-automation-scope
  namespace: {{ .Release.Namespace }}
data:
  kubex-automation-scope: |-
  {{- range .Values.scope }}
    {{ .name }}:
      policyName: {{ .policy | default $.Values.policy.defaultPolicy | quote }}
      {{- if .namespaces }}
      namespaces:{{ toYaml .namespaces | nindent 8 }}
      {{- end }}
      {{- if .podLabels }}
      podLabels:{{ toYaml .podLabels | nindent 8 }}
      {{- end }}
  {{- end }}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: kubex-automation-policy
  namespace: {{ .Release.Namespace }}
data:
  kubex-automation-policy: |-
    automationEnabled: {{ .Values.policy.automationEnabled }}
    defaultPolicy: {{ .Values.policy.defaultPolicy }}
    remoteEnablement: {{ .Values.policy.remoteEnablement }}
    policies:
    {{- toYaml .Values.policy.policies | nindent 6 }}