#################################################################
# densify/container-optimization-data-forwarder parameters
#################################################################

stack:
  densify:
    createSecret: true

container-optimization-data-forwarder:
  nameOverride: kubex-stack
  job:
    checkPrometheusReady: true
  config:
    forwarder:
      densify:
        url:
          UserSecretName: densify-api-secret
    prometheus:
      url:
        host: kubex-prometheus-server
        port: 80

#################################################################
# prometheus-community/prometheus parameters
#################################################################

prometheus:
  alertmanager:
    enabled: false 
  prometheus-pushgateway:
    enabled: false 
  kube-state-metrics:
    prometheusScrape: false
    metricAnnotationsAllowList:
      - 'namespaces=[*]'
    metricLabelsAllowlist:
      - 'nodes=[*]'
      - 'namespaces=[*]'
      - 'pods=[*]'
      - 'deployments=[*]'
      - 'replicasets=[*]'
      - 'daemonsets=[*]'
      - 'statefulsets=[*]'
      - 'jobs=[*]'
      - 'cronjobs=[*]'
      - 'horizontalpodautoscalers=[*]'
    collectors:
      - cronjobs
      - daemonsets
      - deployments
      - horizontalpodautoscalers
      - jobs
      - namespaces
      - nodes
      - poddisruptionbudgets
      - pods
      - replicasets
      - replicationcontrollers
      - resourcequotas
      - statefulsets
  prometheus-node-exporter:
    service:
      port: 9191
      targetPort: 9191
      annotations:
        prometheus.io/scrape: "false"
    containerSecurityContext:
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      seccompProfile:
        type: RuntimeDefault
  server:
    fullnameOverride: kubex-prometheus-server
    global:
      scrape_interval: 20s
      scrape_timeout: 10s
    persistentVolume:
      size: 50Gi
    retention: "2d"
    retentionSize: "40GiB"
    containerSecurityContext:
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      seccompProfile:
        type: RuntimeDefault
  serverFiles:
    prometheus.yml:
      rule_files:
        - /etc/config/recording_rules.yml
        - /etc/config/alerting_rules.yml
        - /etc/config/rules
        - /etc/config/alerts
      scrape_configs:
        - job_name: prometheus
          static_configs:
            - targets:
              - localhost:9090
          metric_relabel_configs:
            - source_labels: [__name__]
              regex: '^prometheus_(build_info|tsdb.*)$'
              action: keep
        - job_name: 'kubernetes-apiservers'
          kubernetes_sd_configs:
            - role: endpointslice
          scheme: https
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          relabel_configs:
            - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpointslice_port_name]
              action: keep
              regex: default;kubernetes;https
          metric_relabel_configs:
            - source_labels: [__name__]
              regex: '^kubernetes_build_info$'
              action: keep
        - job_name: 'kubernetes-nodes'
          scheme: https
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          kubernetes_sd_configs:
            - role: node
          relabel_configs:
            - action: labelmap
              regex: __meta_kubernetes_node_label_(.+)
            - target_label: __address__
              replacement: kubernetes.default.svc:443
            - source_labels: [__meta_kubernetes_node_name]
              regex: (.+)
              target_label: __metrics_path__
              replacement: /api/v1/nodes/$1/proxy/metrics
          metric_relabel_configs:
            - source_labels: [__name__]
              regex: '^kubernetes_build_info$'
              action: keep
        - job_name: 'kubernetes-nodes-cadvisor'
          scheme: https
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          kubernetes_sd_configs:
            - role: node
          relabel_configs:
            - action: labelmap
              regex: __meta_kubernetes_node_label_(.+)
            - target_label: __address__
              replacement: kubernetes.default.svc:443
            - source_labels: [__meta_kubernetes_node_name]
              regex: (.+)
              target_label: __metrics_path__
              replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
          metric_relabel_configs:
            - source_labels: [__name__]
              regex: '^container_(cpu_(cfs_(periods_total|throttled_(periods_total|seconds_total))|usage_seconds_total)|fs_usage_bytes|memory_(rss|usage_bytes|working_set_bytes)|oom_events_total|spec_memory_limit_bytes)$'
              action: keep
        - job_name: 'kubernetes-service-endpointslice'
          honor_labels: true
          kubernetes_sd_configs:
            - role: endpointslice
          relabel_configs:
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
              action: replace
              target_label: __scheme__
              regex: (https?)
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
              action: replace
              target_label: __address__
              regex: (.+?)(?::\d+)?;(\d+)
              replacement: $1:$2
            - action: labelmap
              regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)
              replacement: __param_$1
            - action: labelmap
              regex: __meta_kubernetes_service_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: namespace
            - source_labels: [__meta_kubernetes_endpointslice_name]
              action: keep
              regex: '((kubex|densify)-(kube-state-metrics|prometheus-node-exporter)|.*dcgm).*'
            - source_labels: [__meta_kubernetes_service_name]
              action: replace
              target_label: service
            - source_labels: [__meta_kubernetes_pod_node_name]
              action: replace
              target_label: node
          metric_relabel_configs:
            - source_labels: [__name__]
              regex: '^(DCGM_FI_(DEV_(FB_(FREE|USED)|GPU_UTIL|POWER_USAGE)|PROF_(DRAM_ACTIVE|GR_ENGINE_ACTIVE|PIPE_TENSOR_ACTIVE))|kube_(cronjob_(created|info|labels|next_schedule_time|status_(active|last_schedule_time))|daemonset_(created|labels|status_number_available)|deployment_(created|labels|metadata_generation|spec_strategy_rollingupdate_max_(surge|unavailable))|horizontalpodautoscaler_(info|labels|spec_(max_replicas|min_replicas|target_metric)|status_(condition|current_replicas|target_metric))|job_(created|info|labels|owner|spec_(completions|parallelism)|status_(active|completion_time|start_time))|namespace_(annotations|labels)|node_(info|labels|role|spec_taint|status_(allocatable|capacity))|pod_(container_(info|resource_(limits|requests)|status_(last_terminated_(exitcode|timestamp)|restarts_total|terminated(?:_reason)?))|created|info|labels|owner|status_(phase|qos_class))|replicaset_(created|labels|owner|spec_replicas)|replicationcontroller_(created|spec_replicas)|resourcequota(?:_created)?|statefulset_(created|labels|replicas))|node_(cpu_(core_throttles_total|seconds_total)|disk_(read_bytes_total|reads_completed_total|writes_completed_total|written_bytes_total)|memory_(Buffers_bytes|Cached_bytes|MemFree_bytes|MemTotal_bytes|SReclaimable_bytes)|network_(receive_(bytes_total|packets_total)|speed_bytes|transmit_(bytes_total|packets_total))|vmstat_oom_kill)|openshift_clusterresourcequota_(created|labels|namespace_usage|selector|usage))$'
              action: keep
