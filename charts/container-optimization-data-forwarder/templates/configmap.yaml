apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "common.fullname" . }}
  namespace: {{ template "common.namespace" . }}
  labels:
    app: {{ template "common.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  config.yaml : |
    forwarder:
      densify:
{{- $densifyUrl := .Values.config.forwarder.densify.url | required ".Values.config.forwarder.densify.url is required." }}
{{- $densifyHost := $densifyUrl.host | required ".Values.config.forwarder.densify.url.host is required." }}
        url: {{- omit $densifyUrl "UserSecretName" | toYaml | trim | nindent 10 }}
{{- if .Values.config.forwarder.densify.endpoint }}
        endpoint: {{ .Values.config.forwarder.densify.endpoint }}
{{- end }}
{{- if .Values.config.forwarder.densify.retry }}
        retry: {{- .Values.config.forwarder.densify.retry | toYaml | trim | nindent 10 }}
{{- end }}
{{- if .Values.config.forwarder.proxy }}
{{- $proxyUrl := .Values.config.forwarder.proxy.url | required ".Values.config.forwarder.proxy.url is required." }}
      proxy:
        url:
          scheme: {{ $proxyUrl.scheme | required ".Values.config.forwarder.proxy.url.scheme is required." }}
          host: {{ $proxyUrl.host | required ".Values.config.forwarder.proxy.url.host is required." }}
{{- if $proxyUrl.port }}
          port: {{ $proxyUrl.port }}
{{- end }}
{{- if $proxyUrl.username }}
          username: {{ $proxyUrl.username }}
{{- end }}
{{- if $proxyUrl.password }}
          password: {{ $proxyUrl.password }}
{{- end }}
{{- if $proxyUrl.encrypted_password }}
          encrypted_password: {{ $proxyUrl.encrypted_password }}
{{- end }}
{{- if .Values.config.forwarder.proxy.auth }}
        auth: {{ .Values.config.forwarder.proxy.auth }}
{{- if eq (lower .Values.config.forwarder.proxy.auth) "ntlm" }}
        server: {{ .Values.config.forwarder.proxy.server | required ".Values.config.forwarder.proxy.server is required for ntlm auth." }}
        domain: {{ .Values.config.forwarder.proxy.domain | required ".Values.config.forwarder.proxy.domain is required for ntlm auth." }}
{{- end }}
{{- end }}
{{- end }}
{{- if .Values.config.forwarder.prefix }}
      prefix: {{ .Values.config.forwarder.prefix }}
{{- end }}
    prometheus:
{{- $promUrl := .Values.config.prometheus.url | required ".Values.config.prometheus.url is required." }}
{{- $promHost := $promUrl.host | required ".Values.config.prometheus.url.host is required." }}
      url: {{- omit $promUrl "PrometheusSecretName" | toYaml | trim | nindent 8 }}
{{- if or (.Values.serviceAccount.create) (.Values.serviceAccount.name) (.Values.config.prometheus.bearer_token) }}
      bearer_token: {{ template "common.serviceAccountToken" . }}
{{- end }}
{{- if or (.Values.serviceAccount.create) (.Values.serviceAccount.name) (.Values.config.prometheus.ca_cert) }}
      ca_cert: {{ template "common.serviceAccountCaCert" . }}
{{- end }}
{{- if .Values.config.prometheus.sigv4 }}
{{- $sigv4Region := .Values.config.prometheus.sigv4.region | required ".Values.config.prometheus.sigv4.region is required." }}
      sigv4: {{- omit .Values.config.prometheus.sigv4 "AwsSecretName" | toYaml | trim | nindent 8 }}
{{- end }}
{{- if .Values.config.prometheus.retry }}
      retry: {{- .Values.config.prometheus.retry | toYaml | trim | nindent 8 }}
{{- end }}
{{- if .Values.config.collection }}
    collection: {{- .Values.config.collection | toYaml | trim | nindent 6 }}
{{- end }}
    clusters:
{{- range $cluster := .Values.config.clusters }}
      - name: {{ $cluster.name | quote }}
        identifiers:
{{- range $key, $value := $cluster.identifiers }}
{{- printf "%s: %s" $key (tpl $value $ | quote) | nindent 10 }}
{{- end }}
{{- end }}
{{- if .Values.config.debug }}
    debug: {{ .Values.config.debug }}
{{- end }}
